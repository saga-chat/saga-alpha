{"version":3,"sources":["firebase.tsx","components/messaging/Content.tsx","components/messaging/Bubble.tsx","colors.tsx","components/messaging/SideButtons.tsx","components/messaging/MoreReplies.tsx","data/reducers/appState.tsx","data/utils/clusterIDs.tsx","data/utils/isUnread.tsx","data/utils/buildTree.tsx","data/types/events.tsx","data/utils/isSubstantiveMessage.tsx","data/utils/getBottomChild.tsx","components/messaging/BubbleAndControls.tsx","data/dummy/makeMessage.tsx","data/dummy/correctBelowChain.tsx","data/dummy/makeChain.tsx","data/dummy/reactToMessage.tsx","data/dummy/dummyMe.tsx","data/dummy/makeUser.tsx","data/dummy/dummyUsers.tsx","data/dummy/makeImage.tsx","data/dummy/dummyRoom.tsx","data/dummy/makeParentAndChildren.tsx","data/dummy/dummyAppData.tsx","components/messaging/Cluster.tsx","data/utils/isReaction.tsx","components/messaging/TreeView.tsx","data/utils/getParentsWithNewChildren.tsx","components/messaging/LeafView.tsx","components/messaging/Composer.tsx","components/framing/Frame.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","MESSAGINGSENDERID","appId","measurementId","BubbleMode","TextBody","styled","div","LinkStyled","a","Content","content","childContent","kind","source","contents","disallowedTypes","unwrapDisallowed","renderers","link","style","display","maxWidth","width","maxHeight","objectFit","boxSizing","src","uri","loading","emoji","BubbleDiv","mode","bottom","middle","top","depth","Bubble","message","childEvents","renderedContent","map","index","key","SideBtns","show","SideButtons","selected","onReplyClick","isMe","onEmojiPick","React","emojiPickerOpen","setEmojiPickerOpen","onEmojiSelect","native","pickerAnchor","Tooltip","title","TransitionComponent","Zoom","IconButton","onClick","ref","Popover","open","anchorEl","current","onClose","Fade","set","autoFocus","theme","onSelect","View","ContentTab","More","MoreReplies","tree","id","flat","collected","groupBy","iconified","Object","values","sort","b","length","i","role","clusterIDs","events","seed","subset","cluster","undefined","prev","below","transform","clustered","push","last","creator","isUnread","evt","myId","seen_by","indexOf","buildTree","idToEvent","treeTop","childMap","parent","console","error","SubstantiveContent","isSubstantiveMessage","some","getBottomChild","cm","belows","child","filter","find","pushParent","type","setReplyingTo","replyingTo","initAppState","myID","currentView","TREE","currentContentTab","SUBSTANTIVES","currentParent","appStateReducer","state","action","contentTab","view","commonState","REACTIONS","base","event","reactionEvent","created","Date","getTime","uniqid","range","contentIndex","mdEvent","md","JSON","stringify","BubbleControlsDiv","BubbleAndControls","appState","dispatch","showControls","setShowControls","substantiveChildren","clusterSubstantives","lastNSubstantives","takeRight","truncated","difference","clustering","unread","flexGrow","onMouseOver","onMouseLeave","visibility","verticalAlign","edge","size","htmlColor","sendReaction","paddingLeft","ids","creatorID","messageText","idx","messages","correctBelowChain","msg","makeMessage","makeUser","now","avatar","username","display_name","keyBy","times","dummyUserIDs","keys","dummyUsers","veryFirst","dummyMeId","hello","helloReaction","reactToMessage","chain","makeChain","parentAndChild","parentMsg","children","parentID","makeParentAndChildren","adaReplies","adaReplyReaction","maxReplies","maxReplyReaction","imgFirst","makeImage","imgSnd","dummyRoom","members","online","lastTyping","name","dummyMe","rooms","dummyAppData","me","myRooms","knownUsers","knownRooms","DummyAppDataContext","createContext","ClusterDiv","CreatorDiv","Propic","Cluster","buffer","j","justifyContent","marginTop","singleton","isReaction","every","TreeView","room","contentType","clusters","getParentsWithNewChildren","uniq","LeafView","appData","ComposerDiv","ComposerRow","ReplyingToChip","ComposerInput","input","Composer","replyingToContent","inputVal","setInputVal","inputRef","onKey","useCallback","e","rt","focus","alignItems","fontSize","fontWeight","placeholder","value","onChange","target","onKeyPress","Breadcrumb","BackButton","button","Frame","currentIds","getCurrentDepth","parentUser","substantives","reactions","shouldReply","flexFlow","height","Tabs","Tab","icon","label","Badge","badgeContent","color","overflow","flex","firebase","initializeApp","App","auth","TwitterAuthProvider","PROVIDER_ID","currentUser","photoURL","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9940e462.chunk.js","sourcesContent":["const firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASEURL,\n  projectId: process.env.REACT_APP_PROJECTNAME,\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n  messagingSenderId: process.env.MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENTID,\n};\n\nexport default firebaseConfig;\n","import styled from \"styled-components\";\nimport * as React from \"react\";\nimport { MessageContent } from \"../../data/types/events\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst TextBody = styled.div`\n  font-family: \"Inter\", sans-serif;\n  font-weight: 300;\n  font-size: 15px;\n  padding: 6px 12px;\n  p {\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nconst LinkStyled = styled.a`\n  color: #ffffff;\n`;\n\nconst Content: React.FC<{\n  content: MessageContent;\n  childContent: MessageContent[];\n}> = ({ content, childContent }) => {\n  switch (content.kind) {\n    case \"markdown\":\n      return (\n        <TextBody>\n          <ReactMarkdown\n            source={content.contents}\n            disallowedTypes={[\"image\", \"imageReference\", \"heading\"]}\n            unwrapDisallowed={true}\n            renderers={{ link: LinkStyled }}\n          />\n        </TextBody>\n      );\n    case \"image\":\n      return (\n        <img\n          style={{\n            display: \"block\",\n            maxWidth: \"100%\",\n            width: \"100%\",\n            maxHeight: \"100%\",\n            objectFit: \"contain\",\n            boxSizing: \"border-box\",\n          }}\n          src={content.uri}\n          loading=\"lazy\"\n        />\n      );\n    case \"reaction\":\n      return <span>{content.emoji}</span>;\n    default:\n      return <pre>unimplemented</pre>;\n  }\n};\n\nexport default Content;\n","import styled from \"styled-components\";\nimport * as React from \"react\";\nimport {\n  Message,\n  Embellishment,\n  SagaEvent,\n  Clusters,\n} from \"../../data/types/events\";\nimport Content from \"./Content\";\nimport { purple_primary } from \"../../colors\";\nimport { Id } from \"../../data/types/entity\";\n\nexport enum BubbleMode {\n  top,\n  middle,\n  bottom,\n  singleton,\n}\n\nconst BubbleDiv = styled.div<any>`\n  max-width: 300px;\n  display: inline-block;\n  background-color: ${purple_primary};\n  color: #ffffff;\n  border-radius: ${({ mode }: any) =>\n    (mode === BubbleMode.bottom || mode === BubbleMode.middle\n      ? \"5px\"\n      : \"15px\") +\n    \" 15px \" +\n    \" 15px \" +\n    (mode === BubbleMode.top || mode === BubbleMode.middle ? \"5px\" : \"15px\")};\n  box-sizing: border-box;\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n  opacity: ${({ depth }: any) => 100 - 20 * depth}%;\n`;\n\nconst filterEmbellishmentsByContentIdx = (\n  embellishments: Embellishment[],\n  index: number\n) => embellishments.filter(({ contentIndex }) => contentIndex === index);\n\nexport interface BubbleProps {\n  message: Message;\n  mode: BubbleMode;\n  childEvents: Id[];\n  depth: number;\n}\n\n// TODO: hover to show precise time?\n// TODO: make images borderless (conditional padding)\nconst Bubble: React.FC<BubbleProps> = ({\n  message,\n  mode,\n  childEvents,\n  depth,\n}) => {\n  const { contents } = message;\n  const renderedContent = contents.map((content, index) => (\n    <Content key={index} content={content} childContent={[]} />\n  ));\n  return (\n    <BubbleDiv mode={mode} depth={depth}>\n      {renderedContent}\n    </BubbleDiv>\n  );\n};\n\nexport default Bubble;\n","export const purple_primary = \"#614AEC\";\n","import styled from \"styled-components\";\nimport * as React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport Reply from \"@material-ui/icons/Reply\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport BorderColor from \"@material-ui/icons/BorderColor\";\nimport InsertEmoticon from \"@material-ui/icons/InsertEmoticon\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Fade from \"@material-ui/core/Fade\";\nimport EmojiIcon from \"@material-ui/icons/EmojiEmotions\";\nimport { Picker, EmojiData } from \"emoji-mart\";\nimport Popover from \"@material-ui/core/Popover\";\n\nconst SideBtns = styled.div<any>`\n  display: flex;\n  position: absolute;\n  top: -10px;\n  right: 0;\n  justify-content: space-between;\n  padding-left: 1em;\n  transition: opacity 0.2s;\n  opacity: ${({ show }: any) => (show ? \"1\" : \"0\")};\n`;\n\nexport interface SideButtonsData {\n  selected: number | null;\n  onReplyClick(): void;\n  onEmojiPick(emoji: string): void;\n  isMe: boolean;\n}\n\nexport type SideButtonsProps = SideButtonsData & { show: boolean };\n\nconst SideButtons: React.FC<SideButtonsProps> = ({\n  selected,\n  show,\n  onReplyClick,\n  isMe,\n  onEmojiPick,\n}) => {\n  const [emojiPickerOpen, setEmojiPickerOpen] = React.useState(false);\n  React.useEffect(() => {\n    if (!show && emojiPickerOpen) {\n      setEmojiPickerOpen(false);\n    }\n  }, [show, emojiPickerOpen]);\n\n  const onEmojiSelect = React.useCallback(\n    (emoji: EmojiData) => {\n      setEmojiPickerOpen(false);\n      onEmojiPick((emoji as any).native);\n    },\n    [onEmojiPick]\n  );\n  const pickerAnchor = React.useRef<any>();\n  return (\n    <SideBtns show={show}>\n      <Tooltip title=\"reply\" TransitionComponent={Zoom}>\n        <IconButton onClick={onReplyClick}>\n          <Reply />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"react\" TransitionComponent={Zoom}>\n        <IconButton onClick={() => setEmojiPickerOpen(true)} ref={pickerAnchor}>\n          <EmojiIcon />\n        </IconButton>\n      </Tooltip>\n      <Popover\n        open={emojiPickerOpen}\n        anchorEl={pickerAnchor.current}\n        onClose={() => setEmojiPickerOpen(false)}\n        TransitionComponent={Fade}\n      >\n        <Picker\n          set=\"twitter\"\n          autoFocus={true}\n          theme=\"auto\"\n          title=\"\"\n          onSelect={onEmojiSelect}\n        />\n      </Popover>\n\n      {selected ? (\n        <>\n          <Tooltip title=\"highlight\" TransitionComponent={Zoom}>\n            <IconButton>\n              <BorderColor />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"react\" TransitionComponent={Zoom}>\n            <IconButton>\n              <InsertEmoticon />\n            </IconButton>\n          </Tooltip>\n        </>\n      ) : isMe ? (\n        <>\n          <Tooltip title=\"edit\" TransitionComponent={Zoom}>\n            <IconButton>\n              <Edit />\n            </IconButton>\n          </Tooltip>\n        </>\n      ) : null}\n    </SideBtns>\n  );\n};\n\nexport default SideButtons;\n","import styled from \"styled-components\";\nimport * as React from \"react\";\nimport {\n  Embellishment,\n  Message,\n  SagaEvent,\n  MessageContent,\n  Clusters,\n} from \"../../data/types/events\";\nimport { groupBy } from \"lodash\";\nimport { IdToEvent } from \"../../data/utils/buildTree\";\nimport { Id } from \"../../data/types/entity\";\nimport BorderColor from \"@material-ui/icons/BorderColor\";\nimport MessageIcon from \"@material-ui/icons/Message\";\n\nconst More = styled.div`\n  font-family: \"Inter\", sans-serif;\n  font-weight: 300;\n  font-size: 0.75em;\n  color: grey;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 0.03);\n  padding: 5px 10px 5px 10px;\n  margin: 5px 0 0 1em;\n  cursor: pointer;\n  user-select: none;\n  display: inline-block;\n  transition: 0.2s;\n  :hover {\n    background-color: rgba(0, 0, 0, 0.1);\n    transition: 0.2s;\n  }\n`;\n\nconst MoreReplies: React.FC<{\n  childEvents: Id[];\n  tree: IdToEvent;\n  onClick(): void;\n}> = ({ childEvents, tree, onClick }) => {\n  const contents = childEvents\n    .map((id: Id) => tree[id].contents)\n    .flat() as MessageContent[];\n  const collected = groupBy(contents, (content: MessageContent) => {\n    switch (content.kind) {\n      case \"reaction\":\n        return `reaction-${content.emoji}`;\n        break;\n      case \"image\":\n        return `image-${content.uri}`;\n        break;\n      default:\n        return content.kind;\n    }\n  });\n\n  const iconified = Object.values(collected)\n    .sort((a, b) => b.length - a.length)\n    .map((contents: MessageContent[], i: number) => {\n      switch (contents[0].kind) {\n        case \"reaction\":\n          return (\n            <span role=\"img\" key={i}>\n              {contents[0].emoji}\n              {` (${contents.length})`}\n            </span>\n          );\n        case \"highlight\":\n          return (\n            <span role=\"img\" key={i}>\n              <BorderColor />\n              {` (${contents.length})`}\n            </span>\n          );\n        case \"markdown\":\n          return (\n            <span role=\"img\" key={i}>\n              <MessageIcon />\n              {` (${contents.length}) more`}\n            </span>\n          );\n        case \"image\":\n          return (\n            <span role=\"img\" key={i}>\n              <img src={contents[0].uri} />\n            </span>\n          );\n      }\n    });\n  return <More onClick={onClick}>{iconified}</More>;\n};\n\nexport default MoreReplies;\n","import { Id } from \"../types/entity\";\nimport { ChildMap, SagaEvent, Message } from \"../types/events\";\nimport buildTree, { IdToEvent } from \"../utils/buildTree\";\nimport isSubstantiveMessage from \"../utils/isSubstantiveMessage\";\nimport uniqid from \"uniqid\";\nimport getBottomChild from \"../utils/getBottomChild\";\n\nexport enum View {\n  TREE = 0,\n  LEAF = 1,\n}\n\nexport enum ContentTab {\n  SUBSTANTIVES = 0,\n  REACTIONS = 1,\n}\n\nexport type AppStateAction =\n  | { type: \"PUSH_PARENT\"; parent: Id | null }\n  | { type: \"CHANGE_VIEW\"; view: View }\n  | { type: \"CHANGE_CONTENT_TAB\"; contentTab: ContentTab }\n  | { type: \"SET_REPLYING_TO\"; replyingTo: Id | null }\n  | { type: \"SEND_EVENT\"; event: SagaEvent }\n  | { type: \"SEND_MD_MESSAGE\"; md: string; parent: Id | null }\n  | { type: \"SEND_REACTION\"; emoji: string; parent: Id };\n\nexport const pushParent = (parent: Id | null): AppStateAction => ({\n  type: \"PUSH_PARENT\",\n  parent,\n});\n\nexport const setReplyingTo = (replyingTo: Id | null): AppStateAction => ({\n  type: \"SET_REPLYING_TO\",\n  replyingTo,\n});\n\nexport const sendReaction = (emoji: string, parent: Id): AppStateAction => ({\n  type: \"SEND_REACTION\",\n  emoji,\n  parent,\n});\n\nexport const sendMdMessage = (\n  md: string,\n  parent: Id | null\n): AppStateAction => ({\n  type: \"SEND_MD_MESSAGE\",\n  md,\n  parent,\n});\n\nexport type AppStateDispatcher = React.Dispatch<AppStateAction>;\n\nexport interface AppState {\n  currentView: View;\n  currentContentTab: ContentTab;\n  currentParent: Id | null;\n  childMap: ChildMap;\n  idToEvent: IdToEvent;\n  treeTop: Id[];\n  replyingTo: Id | null;\n  myID: Id;\n}\n\nexport const initAppState = ({\n  events,\n  myID,\n}: {\n  events: SagaEvent[];\n  myID: Id;\n}): AppState => {\n  const { childMap, idToEvent, treeTop } = buildTree(events);\n  return {\n    currentView: View.TREE,\n    currentContentTab: ContentTab.SUBSTANTIVES,\n    currentParent: null,\n    childMap,\n    idToEvent,\n    treeTop,\n    replyingTo: null,\n    myID,\n  };\n};\n\nexport const appStateReducer = (\n  state: AppState,\n  action: AppStateAction\n): AppState => {\n  switch (action.type) {\n    case \"CHANGE_CONTENT_TAB\":\n      return {\n        ...state,\n        currentContentTab: action.contentTab,\n        replyingTo: null,\n      };\n    case \"CHANGE_VIEW\":\n      return { ...state, currentView: action.view, replyingTo: null };\n    case \"PUSH_PARENT\":\n      const commonState = {\n        ...state,\n        currentContentTab: ContentTab.SUBSTANTIVES,\n        currentView: View.TREE,\n        currentParent: action.parent,\n        replyingTo: null,\n      };\n      if (\n        action.parent !== null &&\n        state.childMap[action.parent].filter((child: Id) =>\n          isSubstantiveMessage(child, state.idToEvent, state.childMap)\n        ).length === 0\n      ) {\n        return {\n          ...commonState,\n          currentContentTab: ContentTab.REACTIONS,\n        };\n      }\n      return commonState;\n    case \"SET_REPLYING_TO\":\n      return { ...state, replyingTo: action.replyingTo };\n    case \"SEND_EVENT\":\n      const base = {\n        ...state,\n        idToEvent: { ...state.idToEvent, [action.event.id]: action.event },\n        childMap: { ...state.childMap, [action.event.id]: [] },\n      };\n      if (action.event.parent !== null) {\n        return {\n          ...base,\n          childMap: {\n            ...base.childMap,\n            [action.event.parent]: [\n              ...base.childMap[action.event.parent],\n              action.event.id,\n            ],\n          },\n        };\n      }\n      return { ...base, treeTop: [...state.treeTop, action.event.id] };\n    case \"SEND_REACTION\":\n      const reactionEvent: Message = {\n        kind: \"message\",\n        parent: action.parent,\n        below: getBottomChild(\n          state.idToEvent,\n          state.childMap,\n          state.treeTop,\n          action.parent\n        ),\n        seen_by: [state.myID],\n        creator: state.myID,\n        created: new Date().getTime(),\n        id: uniqid(),\n        contents: [\n          {\n            kind: \"reaction\",\n            emoji: action.emoji,\n            range: null,\n            contentIndex: 0,\n            creator: state.myID,\n            id: uniqid(),\n            created: new Date().getTime(),\n          },\n        ],\n      };\n      return appStateReducer(state, {\n        type: \"SEND_EVENT\",\n        event: reactionEvent,\n      });\n    case \"SEND_MD_MESSAGE\":\n      const mdEvent: Message = {\n        kind: \"message\",\n        parent: action.parent,\n        below: getBottomChild(\n          state.idToEvent,\n          state.childMap,\n          state.treeTop,\n          action.parent\n        ),\n        seen_by: [state.myID],\n        creator: state.myID,\n        created: new Date().getTime(),\n        id: uniqid(),\n        contents: [\n          {\n            kind: \"markdown\",\n            contents: action.md,\n          },\n        ],\n      };\n      return appStateReducer(state, {\n        type: \"SEND_EVENT\",\n        event: mdEvent,\n      });\n    default:\n      console.error(`Cannot handle action ${JSON.stringify(action)}`);\n      return state;\n  }\n};\n","import { SagaEvent, Clusters } from \"../types/events\";\nimport { IdToEvent } from \"./buildTree\";\nimport { Id } from \"../types/entity\";\nimport { transform } from \"lodash\";\n\nconst clusterIDs = (events: IdToEvent, seed: Id, subset?: Id[]): Clusters => {\n  let cluster: Id[];\n  if (subset === undefined) {\n    cluster = [seed];\n    let prev = events[seed].below;\n    while (prev) {\n      cluster = [prev, ...cluster];\n      prev = events[prev].below;\n    }\n  } else {\n    cluster = subset;\n  }\n  const clustered = transform(\n    cluster,\n    (clustered: Clusters, current: Id) => {\n      if (clustered.length === 0) {\n        clustered.push([current]);\n      } else {\n        const last = clustered[clustered.length - 1];\n        if (\n          events[last[last.length - 1]]?.creator === events[current].creator\n        ) {\n          (clustered[clustered.length - 1] as any).push(current);\n        } else {\n          clustered.push([current]);\n        }\n      }\n    },\n    []\n  );\n\n  return clustered;\n};\n\nexport default clusterIDs;\n","import { Id } from \"../types/entity\";\nimport { SagaEvent } from \"../types/events\";\n\nconst isUnread = (evt: SagaEvent, myId: Id) => evt.seen_by.indexOf(myId) < 0;\nexport default isUnread;\n","import { SagaEvent, Clusters, ChildMap } from \"../types/events\";\nimport { Id } from \"../types/entity\";\nexport type IdToEvent = { [id: string]: SagaEvent };\n\nconst buildTree = (\n  events: SagaEvent[]\n): { idToEvent: IdToEvent; treeTop: Id[]; childMap: ChildMap } => {\n  const idToEvent: IdToEvent = {};\n  const treeTop: Id[] = [];\n  const childMap: ChildMap = {};\n  for (const evt of events) {\n    idToEvent[evt.id] = evt;\n    childMap[evt.id] = [];\n\n    if (evt.parent !== null) {\n      if (childMap[evt.parent]) {\n        childMap[evt.parent].push(evt.id);\n      } else {\n        console.error(\n          `Missing parent (nonsequential log!) for ${evt.id}->${evt.parent}`\n        );\n      }\n    } else if (evt.parent === null) {\n      treeTop.push(evt.id);\n    }\n  }\n  return { idToEvent, treeTop, childMap };\n};\n\nexport default buildTree;\n","import Entity, { Id, userid } from \"./entity\";\nexport type Clustered = Id[];\nexport type Clusters = Clustered[];\n\nexport type ChildMap = { [id: string]: Id[] };\nexport interface Evt extends Entity {\n  seen_by: userid[];\n  below: Id | null;\n  parent: Id | null;\n}\n\ninterface Markdown {\n  kind: \"markdown\";\n  contents: string;\n}\n\ninterface Image {\n  kind: \"image\";\n  uri: string;\n}\nexport interface Embellishment extends Entity {\n  contentIndex: number | null;\n}\n\nexport interface Range {\n  start: number;\n  end: number;\n}\n\n// renders as the content itself in \"quote\" form\nexport interface Highlight extends Embellishment {\n  range: Range | null;\n  kind: \"highlight\";\n}\n\nexport interface Reaction extends Embellishment {\n  kind: \"reaction\";\n  emoji: string;\n  range: Range | null;\n}\n\nexport const SubstantiveContent = [\"markdown\", \"image\"];\n\nexport type MessageContent = Markdown | Image | Highlight | Reaction;\nexport interface Message extends Evt {\n  kind: \"message\";\n  isDeleted?: boolean;\n  contents: MessageContent[];\n}\n\ninterface Join {\n  creator: string;\n  kind: \"join\";\n}\n\ninterface Leave {\n  creator: string;\n  kind: \"leave\";\n}\n\ninterface Kick {\n  creator: string;\n  victim: string;\n  kind: \"kick\";\n}\n\ntype MembershipChange = Join | Leave | Kick;\n\ninterface MembershipChanged extends Evt {\n  kind: \"membership_change\";\n  contents: MembershipChange;\n}\n\nexport type SagaEvent = Message | MembershipChanged;\n","import {\n  SubstantiveContent,\n  MessageContent,\n  SagaEvent,\n  ChildMap,\n} from \"../types/events\";\nimport { IdToEvent } from \"./buildTree\";\nimport { Id } from \"../types/entity\";\n\nconst isSubstantiveMessage = (id: Id, tree: IdToEvent, childMap: ChildMap) =>\n  ((tree[id] as any).kind === \"message\" &&\n    (tree[id] as any).contents.some(\n      ({ kind }: MessageContent) => SubstantiveContent.indexOf(kind) > -1\n    )) ||\n  childMap[id].length > 0; // if it has a child it's substantive\n\nexport default isSubstantiveMessage;\n","import { Id } from \"../types/entity\";\nimport { ChildMap } from \"../types/events\";\nimport { IdToEvent } from \"./buildTree\";\n\nconst getBottomChild = (\n  idToEvent: IdToEvent,\n  childMap: ChildMap,\n  treeTop: Id[],\n  parent: Id | null\n): Id | null => {\n  const cm = parent === null ? treeTop : childMap[parent];\n  if (cm.length === 0) {\n    return null;\n  }\n  const belows: Id[] = cm\n    .map((child: Id) => idToEvent[child].below)\n    .filter((child: Id | null) => child !== null) as Id[];\n  return cm.find((child: Id) => belows.indexOf(child) < 0) || null;\n};\n\nexport default getBottomChild;\n","import styled from \"styled-components\";\nimport * as React from \"react\";\nimport {\n  Embellishment,\n  Clustered,\n  Message,\n  Clusters,\n  ChildMap,\n  SagaEvent,\n} from \"../../data/types/events\";\nimport { BubbleProps } from \"./Bubble\";\nimport Bubble from \"./Bubble\";\nimport SideButtons, { SideButtonsData } from \"./SideButtons\";\nimport MoreReplies from \"./MoreReplies\";\nimport Cluster from \"./Cluster\";\nimport { IdToEvent } from \"../../data/utils/buildTree\";\nimport { reduceRight, takeRight, difference } from \"lodash\";\nimport { Id } from \"../../data/types/entity\";\nimport clusterIDs from \"../../data/utils/clusterIDs\";\nimport { clusterSubstantives } from \"./TreeView\";\n\nimport CircleIcon from \"@material-ui/icons/FiberManualRecord\";\nimport OutlinedCircleIcon from \"@material-ui/icons/FiberManualRecordOutlined\";\nimport { IconButton, colors } from \"@material-ui/core\";\nimport isUnread from \"../../data/utils/isUnread\";\nimport { DummyAppDataContext } from \"../../data/dummy/dummyAppData\";\nimport { purple_primary } from \"../../colors\";\nimport {\n  AppStateDispatcher,\n  AppState,\n  setReplyingTo,\n  pushParent,\n  sendReaction,\n} from \"../../data/reducers/appState\";\n\nexport const MAX_PREVIEW_ELEMS = 5;\nexport const MAX_DEPTH = 2;\n\nconst BubbleControlsDiv = styled.div<any>`\n  margin-left: 5px;\n  position: relative;\n  width: 100%;\n  border-radius: 5px;\n  :hover {\n    /* background-color: rgba(0, 0, 200, 0.05); */\n  }\n`;\n\nconst filterEmbellishmentsByContentIdx = (\n  embellishments: Embellishment[],\n  index: number\n) => embellishments.filter(({ contentIndex }) => contentIndex === index);\n\ntype BubbleAndControlsProps = BubbleProps & {\n  appState: AppState;\n  dispatch: AppStateDispatcher;\n};\nconst BubbleAndControls: React.FC<BubbleAndControlsProps> = ({\n  message,\n  mode,\n  childEvents,\n  depth,\n  appState,\n  dispatch,\n}) => {\n  const [showControls, setShowControls] = React.useState(false);\n  const [selected, setSelected] = React.useState(null);\n  const substantiveChildren = clusterSubstantives(\n    childEvents,\n    appState.idToEvent,\n    appState.childMap\n  );\n  const lastNSubstantives =\n    depth >= MAX_DEPTH ? [] : takeRight(substantiveChildren, MAX_PREVIEW_ELEMS);\n  const truncated = difference(childEvents, lastNSubstantives);\n  const clustering =\n    lastNSubstantives.length > 0\n      ? clusterIDs(\n          appState.idToEvent,\n          lastNSubstantives[lastNSubstantives.length - 1],\n          lastNSubstantives\n        )\n      : [];\n  const unread = isUnread(message, appState.myID);\n  return (\n    <div style={{ display: \"inline-block\", flexGrow: 1 }}>\n      <BubbleControlsDiv\n        onMouseOver={() => setShowControls(true)}\n        onMouseLeave={() => setShowControls(false)}\n        // onMouseDown={() => setSelected(1)}\n        // onMouseUp={() => setSelected(null)}\n      >\n        <Bubble\n          message={message}\n          mode={mode}\n          childEvents={childEvents}\n          depth={depth}\n        />\n        <div\n          style={{\n            visibility: unread || showControls ? \"visible\" : \"hidden\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n          }}\n        >\n          <IconButton edge=\"end\" size=\"small\">\n            {unread ? (\n              <CircleIcon htmlColor={purple_primary} />\n            ) : (\n              <OutlinedCircleIcon htmlColor={purple_primary} />\n            )}\n          </IconButton>\n        </div>\n        <SideButtons\n          show={showControls}\n          selected={selected}\n          onReplyClick={() => dispatch(setReplyingTo(message.id))}\n          onEmojiPick={(emoji: string) =>\n            dispatch(sendReaction(emoji, message.id))\n          }\n          isMe={appState.myID === message.creator}\n        />\n      </BubbleControlsDiv>\n      {truncated.length > 0 && (\n        <MoreReplies\n          tree={appState.idToEvent}\n          childEvents={truncated}\n          onClick={() => dispatch(pushParent(message.id))}\n        />\n      )}\n      <div style={{ paddingLeft: \"1em\" }}>\n        {clustering.map((cluster: Clustered, i: number) => (\n          <Cluster\n            key={i}\n            ids={cluster}\n            depth={depth + 1}\n            appState={appState}\n            dispatch={dispatch}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BubbleAndControls;\n","import { Message } from \"../types/events\";\nimport uniqid from \"uniqid\";\n\nexport default (\n  creatorID: string,\n  messageText: string,\n  parent: string | null,\n  below: string | null,\n  id: string = uniqid()\n): Message => ({\n  kind: \"message\",\n  parent,\n  below,\n  seen_by: [creatorID],\n  creator: creatorID,\n  created: new Date().getTime(),\n  id,\n  contents: [\n    {\n      kind: \"markdown\",\n      contents: messageText,\n    },\n  ],\n});\n","import { SagaEvent } from \"../types/events\";\n\nexport default (events: SagaEvent[], below: string | null) =>\n  events.map((evt: SagaEvent, idx: number) => ({\n    ...evt,\n    below: idx === 0 ? below : events[idx - 1].id,\n  }));\n","import { SagaEvent } from \"../types/events\";\nimport makeMessage from \"./makeMessage\";\nimport correctBelowChain from \"./correctBelowChain\";\nexport default (\n  creatorID: string,\n  messages: string[],\n  parent: string | null,\n  below: string | null\n): SagaEvent[] => {\n  return correctBelowChain(\n    messages.map((msg: string) => makeMessage(creatorID, msg, parent, null)),\n    below\n  );\n};\n","import { Message, Range } from \"../types/events\";\nimport uniqid from \"uniqid\";\n\nexport default (\n  creatorID: string,\n  message: Message,\n  below: string | null,\n  emoji: string,\n  range: Range | null,\n  id: string = uniqid()\n): Message => ({\n  kind: \"message\",\n  parent: message.id,\n  below,\n  seen_by: [creatorID],\n  creator: creatorID,\n  created: new Date().getTime(),\n  id,\n  contents: [\n    {\n      kind: \"reaction\",\n      emoji,\n      range,\n      contentIndex: 0,\n      creator: creatorID,\n      id: uniqid(),\n      created: new Date().getTime(),\n    },\n  ],\n});\n","import uniqid from \"uniqid\";\nexport default uniqid();\n","import { Id } from \"../types/entity\";\nimport uniqid from \"uniqid\";\nimport { User } from \"../types/user\";\n\nconst makeUser = (): User => {\n  const id = uniqid();\n  return {\n    id,\n    created: Date.now(),\n    avatar: `http://tinygraphs.com/squares/${id}?theme=duskfalling&numcolors=4&size=220&fmt=png`,\n    username: `testuser_${id}`,\n    display_name: `Test ${id}`,\n  };\n};\n\nexport default makeUser;\n","import { times, keyBy } from \"lodash\";\nimport makeUser from \"./makeUser\";\n\nexport default keyBy(times(10, makeUser), \"id\");\n","import { Message } from \"../types/events\";\nimport uniqid from \"uniqid\";\n\nexport default (\n  creatorID: string,\n  uri: string,\n  parent: string | null,\n  below: string | null,\n  messageText: string = \"\",\n  id: string = uniqid()\n): Message => ({\n  kind: \"message\",\n  parent,\n  below,\n  seen_by: [creatorID],\n  creator: creatorID,\n  created: new Date().getTime(),\n  id,\n  contents:\n    messageText !== \"\"\n      ? [\n          {\n            kind: \"image\",\n            uri,\n          },\n          {\n            kind: \"markdown\",\n            contents: messageText,\n          },\n        ]\n      : [{ kind: \"image\", uri }],\n});\n","import { Room } from \"../types/room\";\nimport uniqid from \"uniqid\";\nimport makeChain from \"./makeChain\";\nimport makeMessage from \"./makeMessage\";\nimport makeParentAndChildren from \"./makeParentAndChildren\";\nimport reactToMessage from \"./reactToMessage\";\nimport dummyMeId from \"./dummyMe\";\nimport dummyUsers from \"./dummyUsers\";\nimport makeImage from \"./makeImage\";\n\nconst dummyUserIDs = Object.keys(dummyUsers);\n\nconst veryFirst = makeMessage(dummyMeId, \"**Intro to Saga**\", null, null);\nconst hello = makeMessage(dummyMeId, \"Hello!\", null, veryFirst.id);\nconst helloReaction = reactToMessage(dummyMeId, hello, null, \"😋\", null);\nconst chain = makeChain(\n  dummyMeId,\n  [\n    \"Welcome to `saga`!\",\n    \"here's a quick tour of all the features\",\n    \"saga was built on the **vision** that chat should work like a notebook\",\n    \"you can read more about this vision at https://a9.io/glue-comic\",\n    \"anyways,\",\n  ],\n  null,\n  hello.id\n);\nconst parentAndChild = makeParentAndChildren(\n  dummyMeId,\n  \"you can reply to stuff!\",\n  [makeMessage(dummyMeId, \"hello from below!\", null, null)],\n  null,\n  chain[chain.length - 1].id\n);\n\nconst adaReplies = makeChain(\n  dummyUserIDs[0],\n  [\"Woah!\", \"that's really cool!\", \"what else can it do?\"],\n  null,\n  parentAndChild[0].id\n);\n\nconst adaReplyReaction = reactToMessage(\n  dummyUserIDs[3],\n  adaReplies[1] as any,\n  null,\n  \"👍\",\n  null\n);\n\nconst maxReplies = makeChain(\n  dummyMeId,\n  [\"# the\", \"quick\", \"brown\", \"fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"dog\"],\n  adaReplies[1].id,\n  adaReplyReaction.id\n);\n\nconst maxReplyReaction = reactToMessage(\n  dummyUserIDs[2],\n  maxReplies[5] as any,\n  null,\n  \"❤️\",\n  null\n);\n\nconst imgFirst = makeImage(\n  dummyUserIDs[1],\n  \"https://d2w9rnfcy7mm78.cloudfront.net/6647576/original_68db1c6470569c7d3f47de34dc7ddf81.jpg?1585586959?bc=0\",\n  null,\n  adaReplies[adaReplies.length - 1].id\n);\n\nconst imgSnd = makeImage(\n  dummyUserIDs[2],\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Flag_of_New_Mexico.svg/320px-Flag_of_New_Mexico.svg.png\",\n  imgFirst.id,\n  null,\n  \"look at mee im the state of new mexico hehehe\"\n);\n\nconst events = [\n  veryFirst,\n  hello,\n  helloReaction,\n  ...chain,\n  ...parentAndChild,\n  ...adaReplies,\n  adaReplyReaction,\n  ...maxReplies,\n  maxReplyReaction,\n  imgFirst,\n  imgSnd,\n];\n\nconst dummyRoom: Room = {\n  creator: dummyMeId,\n  created: Date.now(),\n  id: uniqid(),\n  members: { [dummyMeId]: { id: dummyMeId, online: true, lastTyping: null } },\n  name: \"Brady Bunch Room\",\n  events,\n};\n\nexport default dummyRoom;\n","import { SagaEvent } from \"../types/events\";\nimport correctBelowChain from \"./correctBelowChain\";\nimport uniqid from \"uniqid\";\nimport makeMessage from \"./makeMessage\";\nexport default (\n  creatorID: string,\n  parentMsg: string,\n  children: SagaEvent[],\n  parent: string | null,\n  below: string | null\n): SagaEvent[] => {\n  const parentID = uniqid();\n  const parentMessage = makeMessage(\n    creatorID,\n    parentMsg,\n    parent,\n    below,\n    parentID\n  );\n  return [\n    parentMessage,\n    ...correctBelowChain(\n      children.map((evt: SagaEvent) => ({\n        ...evt,\n        parent: parentID,\n      })),\n      null\n    ),\n  ];\n};\n","import { AppData } from \"../types/appdata\";\nimport dummyRoom from \"./dummyRoom\";\nimport dummyMeId from \"./dummyMe\";\nimport { LocalUser } from \"../types/user\";\nimport dummyUsers from \"./dummyUsers\";\nimport React from \"react\";\n\nconst dummyMe: LocalUser = {\n  rooms: [dummyRoom.id],\n  id: dummyMeId,\n  created: Date.now(),\n  avatar:\n    \"https://pbs.twimg.com/profile_images/1198871789545381888/F2SmhoVi_400x400.jpg\",\n  username: \"max\",\n  display_name: \"Max Krieger\",\n};\n\nconst dummyAppData: AppData = {\n  me: dummyMe.id,\n  myRooms: [dummyRoom.id],\n  knownUsers: { ...dummyUsers, [dummyMe.id]: dummyMe },\n  knownRooms: { [dummyRoom.id]: dummyRoom },\n};\n\nexport default dummyAppData;\n\nexport const DummyAppDataContext = React.createContext(dummyAppData);\n","import styled from \"styled-components\";\nimport * as React from \"react\";\nimport {\n  Embellishment,\n  Message,\n  SagaEvent,\n  Clustered,\n  ChildMap,\n} from \"../../data/types/events\";\nimport { IdToEvent } from \"../../data/utils/buildTree\";\nimport BubbleAndControls from \"./BubbleAndControls\";\nimport { BubbleMode } from \"./Bubble\";\nimport { Id } from \"../../data/types/entity\";\nimport isSubstantiveMessage from \"../../data/utils/isSubstantiveMessage\";\nimport { DummyAppDataContext } from \"../../data/dummy/dummyAppData\";\nimport { clusterSubstantives } from \"./TreeView\";\nimport { AppState, AppStateDispatcher } from \"../../data/reducers/appState\";\n\nconst ClusterDiv = styled.div`\n  display: block;\n  padding: 0;\n  margin: 5px;\n  width: 100%;\n  max-width: 700px;\n`;\n\nexport const CreatorDiv = styled.div`\n  font-family: \"Inter\", sans-serif;\n  font-weight: 600;\n  color: rgba(0, 0, 0, 0.75);\n  font-size: 12px;\n  padding-left: 40px;\n`;\n\nconst PROPIC_SIZE = \"25px\";\n\nexport const Propic = styled.div<any>`\n  display: inline-block;\n  width: ${PROPIC_SIZE};\n  height: ${PROPIC_SIZE};\n  border-radius: 1000px;\n  background: url(${({ uri }: any) => uri});\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nconst Cluster: React.FC<{\n  ids: Id[];\n  depth: number;\n  appState: AppState;\n  dispatch: AppStateDispatcher;\n}> = ({ ids, depth, appState, dispatch }) => {\n  const { knownUsers } = React.useContext(DummyAppDataContext);\n  const buffer = <div style={{ width: PROPIC_SIZE }} />;\n  return (\n    <ClusterDiv>\n      <CreatorDiv>\n        {knownUsers[appState.idToEvent[ids[0]].creator].display_name}\n      </CreatorDiv>\n      {ids.map((id: Id, j: number) => {\n        const evt = appState.idToEvent[id];\n        const childEvents = appState.childMap[id];\n        return (\n          <div\n            key={j}\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              width: \"100%\",\n              marginTop: \"5px\",\n            }}\n          >\n            {j === 0 ? <Propic uri={knownUsers[evt.creator].avatar} /> : buffer}\n            <BubbleAndControls\n              message={evt as any}\n              childEvents={childEvents}\n              depth={depth}\n              appState={appState}\n              dispatch={dispatch}\n              mode={\n                ids.length === 1\n                  ? BubbleMode.singleton\n                  : j === 0\n                  ? BubbleMode.top\n                  : j === ids.length - 1\n                  ? BubbleMode.bottom\n                  : BubbleMode.middle\n              }\n            />\n          </div>\n        );\n      })}\n    </ClusterDiv>\n  );\n};\n\nexport default Cluster;\n","import { MessageContent, SagaEvent, ChildMap, Message } from \"../types/events\";\nimport { Id } from \"../types/entity\";\nimport { IdToEvent } from \"./buildTree\";\n\nconst isReaction = (id: Id, tree: IdToEvent, childMap: ChildMap) =>\n  (tree[id] as Message).contents.every(\n    ({ kind }: MessageContent) => kind === \"reaction\"\n  );\n\nexport default isReaction;\n","import styled from \"styled-components\";\nimport * as React from \"react\";\nimport {\n  Clustered,\n  Clusters,\n  ChildMap,\n  SagaEvent,\n} from \"../../data/types/events\";\nimport { Room } from \"../../data/types/room\";\nimport { IdToEvent } from \"../../data/utils/buildTree\";\nimport Cluster from \"./Cluster\";\nimport { Id } from \"../../data/types/entity\";\nimport clusterIDs from \"../../data/utils/clusterIDs\";\nimport isSubstantiveMessage from \"../../data/utils/isSubstantiveMessage\";\nimport isReaction from \"../../data/utils/isReaction\";\nimport {\n  AppState,\n  AppStateDispatcher,\n  ContentTab,\n  pushParent,\n} from \"../../data/reducers/appState\";\n\nexport const clusterSubstantives = (\n  cluster: Id[],\n  idToEvent: IdToEvent,\n  childMap: ChildMap\n) => cluster.filter((id: Id) => isSubstantiveMessage(id, idToEvent, childMap));\n\nconst TreeView: React.FC<{\n  room: Room;\n  ids: Id[];\n  appState: AppState;\n  dispatch: AppStateDispatcher;\n  contentType: ContentTab;\n}> = ({ room, ids, contentType, appState, dispatch }) => {\n  // TODO: cluster does not support non messages!\n  const clusters = clusterIDs(\n    appState.idToEvent,\n    ids[ids.length - 1]\n  ).map((cluster: Id[]) =>\n    contentType === ContentTab.SUBSTANTIVES\n      ? clusterSubstantives(cluster, appState.idToEvent, appState.childMap)\n      : cluster.filter((id) =>\n          isReaction(id, appState.idToEvent, appState.childMap)\n        )\n  );\n  return (\n    <div>\n      {clusters.map((cluster: Clustered, i: number) =>\n        cluster.length > 0 ? (\n          <Cluster\n            key={i}\n            ids={cluster}\n            appState={appState}\n            dispatch={dispatch}\n            depth={0}\n          />\n        ) : null\n      )}\n    </div>\n  );\n};\n\nexport default TreeView;\n","import { IdToEvent } from \"./buildTree\";\nimport { uniq } from \"lodash\";\nimport { SagaEvent } from \"../types/events\";\nimport { Id } from \"../types/entity\";\nimport isUnread from \"./isUnread\";\n\nconst getParentsWithNewChildren = (tree: IdToEvent, myId: Id) =>\n  uniq(\n    Object.values(tree)\n      .filter(\n        (evt: SagaEvent) =>\n          isUnread(evt, myId) &&\n          (evt.parent === null || !isUnread(tree[evt.parent], myId)) // ensures no duplicate clusters\n      )\n      .map((evt: SagaEvent) => (evt.parent === null ? evt.id : evt.parent))\n  );\n\n// TODO: sort by time?\n\nexport default getParentsWithNewChildren;\n","import styled from \"styled-components\";\nimport * as React from \"react\";\nimport {\n  Clustered,\n  Clusters,\n  ChildMap,\n  SagaEvent,\n} from \"../../data/types/events\";\nimport { Room } from \"../../data/types/room\";\nimport buildTree, { IdToEvent } from \"../../data/utils/buildTree\";\nimport Cluster from \"./Cluster\";\nimport { Id } from \"../../data/types/entity\";\nimport clusterIDs from \"../../data/utils/clusterIDs\";\nimport getParentsWithNewChildren from \"../../data/utils/getParentsWithNewChildren\";\nimport { DummyAppDataContext } from \"../../data/dummy/dummyAppData\";\nimport {\n  AppStateDispatcher,\n  AppState,\n  pushParent,\n} from \"../../data/reducers/appState\";\n\nconst LeafView: React.FC<{\n  room: Room;\n  appState: AppState;\n  dispatch: AppStateDispatcher;\n}> = ({ room, appState, dispatch }) => {\n  const appData = React.useContext(DummyAppDataContext);\n  const ids = getParentsWithNewChildren(appState.idToEvent, appData.me);\n  const clusters = clusterIDs(appState.idToEvent, ids[ids.length - 1], ids);\n  return (\n    <div>\n      {clusters.map((cluster: Clustered, i: number) =>\n        cluster.length > 0 ? (\n          <Cluster\n            key={i}\n            ids={cluster}\n            depth={0}\n            dispatch={dispatch}\n            appState={appState}\n          />\n        ) : null\n      )}\n    </div>\n  );\n};\n\nexport default LeafView;\n","import styled from \"styled-components\";\nimport * as React from \"react\";\nimport { ReplyingMode } from \"../framing/Frame\";\nimport { Id } from \"../../data/types/entity\";\nimport {\n  AppState,\n  AppStateDispatcher,\n  setReplyingTo,\n  sendMdMessage,\n} from \"../../data/reducers/appState\";\nimport Content from \"./Content\";\nimport { IconButton } from \"@material-ui/core\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { purple_primary } from \"../../colors\";\nimport { useCallback } from \"react\";\n\nconst ComposerDiv = styled.div<any>`\n  padding: 1em;\n  width: 100%;\n  max-width: 800px;\n  box-shadow: 0px -5px 5px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  padding: 1em;\n  display: ${({ show }: any) => (show ? \"visible\" : \"none\")};\n`;\n\nconst ComposerRow = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst ReplyingToChip = styled.div<any>`\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  max-height: 200px;\n  overflow: hidden;\n  padding: 1em 1em 0.5em 1em;\n  margin-bottom: 1em;\n`;\n\nconst ComposerInput = styled.input`\n  background-color: rgba(0, 0, 0, 0.08);\n  color: rgba(0, 0, 0, 0.7);\n  font-size: 1em;\n  border-radius: 100px;\n  border: 1px solid rgba(0, 0, 0, 0);\n  outline: none;\n  padding: 5px 10px 5px 10px;\n  box-sizing: border-box;\n  flex: 2;\n  :focus {\n    border: 1px solid ${purple_primary};\n  }\n`;\n\ninterface ComposerProps {\n  appState: AppState;\n  dispatch: AppStateDispatcher;\n  show: boolean;\n}\n\nconst Composer: React.FC<ComposerProps> = ({ appState, dispatch, show }) => {\n  const replyingToContent =\n    appState.replyingTo !== null\n      ? appState.idToEvent[appState.replyingTo]\n      : null;\n\n  const [inputVal, setInputVal] = React.useState(\"\");\n  const inputRef = React.useRef<any>();\n  const onKey = useCallback(\n    (e: any) => {\n      if (e.key === \"Enter\") {\n        const rt =\n          appState.replyingTo === null\n            ? appState.currentParent\n            : appState.replyingTo;\n        dispatch(sendMdMessage(inputVal, rt));\n        setInputVal(\"\");\n        dispatch(setReplyingTo(null));\n      }\n    },\n    [dispatch, inputVal, appState.replyingTo, appState.currentParent]\n  );\n  React.useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [\n    appState.replyingTo,\n    appState.currentParent,\n    appState.currentContentTab,\n    appState.currentView,\n  ]);\n  return (\n    <ComposerDiv show={show}>\n      {replyingToContent && replyingToContent.kind === \"message\" && (\n        <ReplyingToChip>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <div style={{ fontSize: \"12px\" }}>\n              Replying to{\" \"}\n              <span style={{ fontWeight: 600 }}>\n                {replyingToContent.creator}\n              </span>\n            </div>\n            <IconButton\n              onClick={() => dispatch(setReplyingTo(null))}\n              size=\"small\"\n            >\n              <CancelIcon fontSize=\"small\" />\n            </IconButton>\n          </div>\n          <div style={{ maxWidth: 300 }}>\n            <Content\n              content={replyingToContent.contents[0]}\n              childContent={[]}\n            />\n          </div>\n        </ReplyingToChip>\n      )}\n      <ComposerRow>\n        <ComposerInput\n          type=\"text\"\n          placeholder=\"enter a message\"\n          value={inputVal}\n          onChange={(e: any) => setInputVal(e.target.value)}\n          onKeyPress={onKey}\n          ref={inputRef}\n        />\n      </ComposerRow>\n    </ComposerDiv>\n  );\n};\n\nexport default Composer;\n","import styled from \"styled-components\";\nimport * as React from \"react\";\nimport { Room } from \"../../data/types/room\";\nimport buildTree, { IdToEvent } from \"../../data/utils/buildTree\";\nimport TreeView, { clusterSubstantives } from \"../messaging/TreeView\";\nimport { Id } from \"../../data/types/entity\";\nimport { AppData } from \"../../data/types/appdata\";\nimport { DummyAppDataContext } from \"../../data/dummy/dummyAppData\";\nimport Bubble, { BubbleMode } from \"../messaging/Bubble\";\nimport { Message } from \"../../data/types/events\";\nimport { Propic, CreatorDiv } from \"../messaging/Cluster\";\nimport { purple_primary } from \"../../colors\";\n\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ChatBubble from \"@material-ui/icons/ChatBubble\";\nimport EmojiEmoticons from \"@material-ui/icons/EmojiEmotions\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport AccountTree from \"@material-ui/icons/AccountTree\";\nimport Badge from \"@material-ui/core/Badge\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport isReaction from \"../../data/utils/isReaction\";\nimport LeafView from \"../messaging/LeafView\";\nimport Composer from \"../messaging/Composer\";\nimport { useCallback } from \"react\";\nimport isSubstantiveMessage from \"../../data/utils/isSubstantiveMessage\";\nimport {\n  appStateReducer,\n  initAppState,\n  View,\n  ContentTab,\n  pushParent,\n} from \"../../data/reducers/appState\";\n\nconst getCurrentDepth = (id: Id | null, tree: IdToEvent): number =>\n  id !== null && tree[id].parent !== null\n    ? getCurrentDepth(tree[id].parent as any, tree) + 1\n    : 0;\n\nconst Breadcrumb = styled.div`\n  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.1);\n  padding: 1em;\n  margin-bottom: 1em;\n`;\n\nconst BackButton = styled.button`\n  outline: none;\n  color: ${purple_primary};\n  background: none;\n  border: none;\n  font-family: \"Inter\", sans-serif;\n  font-weight: 500;\n  font-size: 1em;\n  cursor: pointer;\n  transition: 0.2s;\n  opacity: 1;\n  :hover {\n    opacity: 0.8;\n    transition: 0.2s;\n  }\n`;\n\nexport type ReplyingMode = {\n  replyingTo: Id | null;\n};\n\nconst Frame: React.FC = () => {\n  const appData = React.useContext(DummyAppDataContext);\n  const room = appData.knownRooms[appData.myRooms[0]];\n  const { events } = room;\n\n  const [appState, dispatch] = React.useReducer(\n    appStateReducer,\n    { events, myID: appData.me },\n    initAppState\n  );\n\n  const currentDepth = getCurrentDepth(\n    appState.currentParent,\n    appState.idToEvent\n  );\n  const currentIds =\n    appState.currentParent !== null\n      ? appState.childMap[appState.currentParent]\n      : appState.treeTop;\n  const parentUser =\n    appState.currentParent !== null\n      ? appData.knownUsers[appState.idToEvent[appState.currentParent].creator]\n      : null;\n\n  const substantives =\n    appState.currentParent !== null\n      ? clusterSubstantives(currentIds, appState.idToEvent, appState.childMap)\n      : [];\n\n  const reactions =\n    appState.currentParent !== null\n      ? currentIds.filter((id: Id) =>\n          isReaction(id, appState.idToEvent, appState.childMap)\n        )\n      : [];\n\n  const shouldReply =\n    appState.replyingTo !== null ||\n    (appState.currentView === View.TREE &&\n      appState.currentContentTab === ContentTab.SUBSTANTIVES);\n\n  return (\n    <div style={{ display: \"flex\", flexFlow: \"column\", height: \"100vh\" }}>\n      <Breadcrumb>\n        {appState.currentParent !== null ? (\n          <>\n            <BackButton\n              onClick={() =>\n                dispatch(\n                  pushParent(\n                    appState.idToEvent[appState.currentParent || \"\"].parent\n                  )\n                )\n              }\n            >\n              {\"< back\"}\n            </BackButton>\n            <CreatorDiv>{parentUser?.display_name}</CreatorDiv>\n            <Propic uri={parentUser?.avatar} />\n            <Bubble\n              mode={BubbleMode.singleton}\n              depth={0}\n              childEvents={[]}\n              message={appState.idToEvent[appState.currentParent] as Message}\n            />\n          </>\n        ) : (\n          <>\n            <BackButton>{room.name}</BackButton>\n            <Tabs\n              value={appState.currentView}\n              onChange={(e: any, value: number) =>\n                dispatch({ type: \"CHANGE_VIEW\", view: value })\n              }\n              style={{ display: \"inline-block\" }}\n            >\n              <Tab icon={<AccountTree fontSize=\"small\" />} />\n              <Tab icon={<InboxIcon fontSize=\"small\" />} />\n            </Tabs>\n          </>\n        )}\n      </Breadcrumb>\n      {appState.currentParent !== null && (\n        <Tabs\n          value={appState.currentContentTab}\n          onChange={(e: any, value: any) =>\n            dispatch({ type: \"CHANGE_CONTENT_TAB\", contentTab: value })\n          }\n        >\n          <Tab\n            label={\n              <Badge badgeContent={substantives.length} color=\"primary\">\n                <ChatBubble />\n              </Badge>\n            }\n          />\n          <Tab\n            label={\n              <Badge badgeContent={reactions.length} color=\"primary\">\n                <EmojiEmoticons />\n              </Badge>\n            }\n          />\n        </Tabs>\n      )}\n      <div style={{ overflow: \"auto\", flex: 1 }}>\n        {appState.currentView === View.TREE ? (\n          <TreeView\n            room={room}\n            ids={currentIds}\n            appState={appState}\n            dispatch={dispatch}\n            contentType={\n              appState.currentContentTab === ContentTab.SUBSTANTIVES ||\n              appState.currentParent === null\n                ? ContentTab.SUBSTANTIVES\n                : ContentTab.REACTIONS\n            }\n          />\n        ) : (\n          <LeafView room={room} appState={appState} dispatch={dispatch} />\n        )}\n      </div>\n      <Composer appState={appState} dispatch={dispatch} show={shouldReply} />\n    </div>\n  );\n};\n\nexport default Frame;\n","import React, { FC } from \"react\";\nimport \"./App.css\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport firebaseConfig from \"./firebase\";\nimport Frame from \"./components/framing/Frame\";\n\nfirebase.initializeApp(firebaseConfig);\n\nconst App: FC = () => {\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [firebase.auth.TwitterAuthProvider.PROVIDER_ID],\n    callbacks: {\n      signInSuccessWithAuthResult: (x: any) => {\n        console.log(x);\n        return false;\n      },\n    },\n  };\n  const propic = (firebase.auth().currentUser\n    ? firebase.auth().currentUser!.photoURL\n    : \"https://picsum.photos/48/48\") as string;\n\n  return (\n    <div style={{ overflow: \"hidden\" }}>\n      <Frame />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}